#!/usr/bin/env bash

doc() {
    local hedr="$(basename "${0}"):"
    local body="$(grep '\s#?\s' $(realpath "${0}"))"
    body="$(echo "${body}" | sed -e 's/^\s*//g' -e 's/#?//g' -e 's/^-/  -/g')"
    echo -e "${hedr}\n${body}"
}

main() (
    local cmd=""
    local cmdi=0
    for ((i=1; i <= ${#@}; i++)); do
        local k="${@:$i:1}"
        [[ ! "${k}" =~ ^-.* ]] && \
            cmd="${k}" && cmdi=$i && \
            break

        case "${k}" in
            -h|--help)
                echo "$(doc)"; return 0;;
        esac
    done

    local file="$(basename ${PWD})"
    local tmpDir="$(mktemp -d -p /tmp)"
    local out="${tmpDir}/${file}"

    trap 'rm -rf ${tmpDir}' EXIT

    buildAndZip() {
        go build -i -o "${out}" || return 1
        pushd "${tmpDir}" >/dev/null
        zip --quiet "${file}.zip" "${file}" || return 1
        popd >/dev/null
    }

    #? create sets up a new aws lambda instance
    create() {
        local func=""
        local region="$(aws configure get region)"
        local role=""

        for ((i=1; i <= ${#@}; i++)); do
            local k="${@:$i:1}"
            local v="${@:$i+1:1}"
            case "${k}" in
                -f|--func) #? function name
                    func="${v}"; ((i++)) ;;
                --func=*)
                    func="${k#*=}" ;;
                --region)  #? target region
                    region="${v}"; ((i++)) ;;
                --region=*)
                    region="${k#*=}" ;;
                -r|--role) #? role arn
                    role="${v}"; ((i++)) ;;
                --role=*)
                    role="${k#*=}" ;;
            esac
        done

        [[ -z "${func// }" ]] && echo "function name must be provided" >&2 && return 1
        [[ -z "${region// }" ]] && echo "region must be set or in aws config" >&2 && return 1
        [[ -z "${role// }" ]] && echo "role resource must be provided" >&2 && return 1

        buildAndZip || return $?

        aws lambda create-function \
            --function-name "${func}" \
            --zip-file fileb://"${out}.zip" \
            --region ${region} \
            --handler "${file}" \
            --runtime go1.x \
            --role "${role}"
    }

    #? update reuploads the identified aws lambda instance
    update() {
        local func=""

        for ((i=1; i <= ${#@}; i++)); do
            local k="${@:$i:1}"
            local v="${@:$i+1:1}"
            case "${k}" in
                -f|--func) #? function name
                    func="${v}"; ((i++)) ;;
                --func=*)
                    func="${k#*=}" ;;
            esac
        done

        [[ -z "${func// }" ]] && echo "function name must be provided" >&2 && return 1

        buildAndZip || return $?

        aws lambda update-function-code \
            --function-name "${func}" \
            --zip-file fileb://"${out}.zip"
    }

    case "${cmd}" in
        create|update) ${cmd} "${@:$cmdi+1}" ;;
        *) echo "$(doc)" >&2 && return 1 ;;
    esac
)

main "${@}"
